//
//  DetailViewController.swift
//  worldlinetest
//
//  Created by Marcos Molero on 07/11/2018.
//  Copyright (c) 2018 Marcos Molero. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates

import UIKit

protocol DetailDisplayLogic: class {
    func displayPointOI(viewModel: DetailScene.GetPointOIDetail.ViewModel)
}

class DetailViewController: UIViewController, DetailDisplayLogic {
    
    var interactor: DetailBusinessLogic?
    var router: (DetailRoutingLogic & DetailDataPassing)?
    var dependencyInjector:SceneDependencyInjector! = DetailDependencyInjector()
    
    // MARK: Object lifecycle
    @IBOutlet weak var detailTableView: UITableView!
    var displayPointOI: DetailScene.GetPointOIDetail.DisplayPointOI?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        dependencyInjector.inject(to:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigationController()
        showHUD()
        getPointOIDetail()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
    }
    
    func setupNavigationController() {
        self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.navigationBar.topItem?.title = "Back"
        self.navigationController?.navigationBar.prefersLargeTitles = true
    }
    
    // MARK: Requests
    func getPointOIDetail() {
        let request = DetailScene.GetPointOIDetail.Request()
        interactor?.getPointOIDetail(request: request)
    }
    
    func updatePointOI() {
        let request = DetailScene.UpdatePointOI.Request()
        interactor?.updatePointOI(request: request)
    }
    
    // MARK: Display logic
    func displayPointOI(viewModel: DetailScene.GetPointOIDetail.ViewModel) {
        displayPointOI = viewModel.displayPointOI
        
        updatePointOI()
        
        if let title = displayPointOI?.title {
            self.navigationItem.title = title
        }
        
        DispatchQueue.main.async {
            self.detailTableView.reloadData()
            self.hideHUD()
        }
        
    }
}

extension DetailViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
