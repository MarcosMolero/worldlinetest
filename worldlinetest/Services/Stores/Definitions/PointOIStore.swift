//
//  PointOIStore.swift
//  worldlinetest
//
//  Created by Marcos Molero on 05/11/2018.
//  Copyright (c) 2018 Marcos Molero. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates

protocol PointOIStore {
    func getPointsOI(completion: @escaping PointOIStoreGetPointsOICompletionHandler)
    func getPointOI(withId id: String, completion: @escaping PointOIStoreGetPointOICompletionHandler)
    func savePointsOI(with pointsOI: [PointOI], completion: @escaping PointOIStoreSavePointsOICompletionHandler)
    func updatePointOI(with pointOI: PointOI, completion: @escaping PointOIStoreUpdatePointOICompletionHandler)
}

typealias PointOIStoreGetPointsOICompletionHandler = (PointOIStoreResult<[PointOI]>) -> Void
typealias PointOIStoreGetPointOICompletionHandler = (PointOIStoreResult<PointOI>) -> Void
typealias PointOIStoreSavePointsOICompletionHandler = (PointOIStoreEmptyResult) -> Void
typealias PointOIStoreUpdatePointOICompletionHandler = (PointOIStoreEmptyResult) -> Void

enum PointOIStoreResult<U> {
    case success(result: U)
    case failure(error: PointOIStoreError)
}

enum PointOIStoreEmptyResult {
    case success
    case failure(error: PointOIStoreError)
}

enum PointOIStoreError: Equatable, Error {
    case cannotGet(String)
    case cannotCreate(String)
    case cannotUpdate(String)
    case cannotDelete(String)
}

func ==(lhs: PointOIStoreError, rhs: PointOIStoreError) -> Bool {
    switch (lhs, rhs) {
    case (.cannotGet(let a), .cannotGet(let b)) where a == b: return true
    default:
        return false
    }
}
